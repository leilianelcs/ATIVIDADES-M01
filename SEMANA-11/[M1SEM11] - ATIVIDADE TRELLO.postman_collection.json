{
	"info": {
		"_postman_id": "ed40081e-372a-4c61-b8bb-753f684806d5",
		"name": "[M1SEM11] - ATIVIDADE TRELLO",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33911808"
	},
	"item": [
		{
			"name": "Adicionar curso",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoibGVpbGlhbmVsY3NAZ21haWwuY29tIiwibm9tZSI6IkxlaWxpYW5lIENvc3RhIiwiaWF0IjoxNzE2MzUwNTk2fQ.jsq7f6q1MzfiDLbhoAuvKPIlX0Rn4RJ4y3nCQKSt_QY"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n        \"nome\": \"Comunicação Social\",\r\n        \"duracao_horas\": 120\r\n\r\n    }\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/cursos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cursos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Adicionar professor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"nome\": \"Juliano Nascimento\",\n        \"materia\": \"Matemática\"\n    }\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/professores",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"professores"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Criar Aluno",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"leilianelcs@gmail.com\",\r\n    \"password\": \"123456\",\r\n    \"nome\": \"Leiliane Costa\",\r\n    \"data_nascimento\": \"2001-01-07\",\r\n    \"celular\": \"48 99999 99999\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/alunos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"alunos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"leilianelcs@gmail.com\",\r\n    \"password\": \"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar Cursos",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoibGVpbGlhbmVsY3NAZ21haWwuY29tIiwibm9tZSI6IkxlaWxpYW5lIENvc3RhIiwiaWF0IjoxNzE2MzUwNTk2fQ.jsq7f6q1MzfiDLbhoAuvKPIlX0Rn4RJ4y3nCQKSt_QY"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/cursos",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cursos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pesquisar Cursos",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoibGVpbGlhbmVsY3NAZ21haWwuY29tIiwibm9tZSI6IkxlaWxpYW5lIENvc3RhIiwiaWF0IjoxNzE2MzUwNTk2fQ.jsq7f6q1MzfiDLbhoAuvKPIlX0Rn4RJ4y3nCQKSt_QY"
					}
				],
				"url": {
					"raw": "http://localhost:3000/cursos?nome=Comunicação Social&duracao=",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cursos"
					],
					"query": [
						{
							"key": "nome",
							"value": "Comunicação Social"
						},
						{
							"key": "duracao",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar Professores",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3020/professores",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3020",
					"path": [
						"professores"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Atualizar professor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"nome\": \"Juliano Cunha\",\n        \"materia\": \"Física\",\n        \"id\": 2\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3020/professores/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3020",
					"path": [
						"professores",
						"2"
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Atualizar curso",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Curso de JavaScript Avançado\",\r\n  \"duracao\": 700\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3040/cursos/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3040",
					"path": [
						"cursos",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deletar professor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3020/professores/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3020",
					"path": [
						"professores",
						"2"
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Deletar curso",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoibGVpbGlhbmVsY3NAZ21haWwuY29tIiwibm9tZSI6IkxlaWxpYW5lIENvc3RhIiwiaWF0IjoxNzE2MzUwNTk2fQ.jsq7f6q1MzfiDLbhoAuvKPIlX0Rn4RJ4y3nCQKSt_QY"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/cursos/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"cursos",
						"1"
					]
				}
			},
			"response": []
		}
	]
}